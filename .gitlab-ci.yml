stages:          # List of stages for jobs, and their order of execution
  - build
  - test
  - deploy

build-containerized-image:
    image: docker:20.10.16
    stage: build
    services:
      - docker:20.10.16-dind
    script:
      - echo "Building containerized docker image."
      - docker info
      - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
      - docker build -t $CI_REGISTRY/group/project/image:latest .
      - docker push $CI_REGISTRY/group/project/image:latest
      # - docker run my-docker-image /script/to/run/tests

    

# build-job:       # This job runs in the build stage, which runs first.
#   stage: build
#   script:
#     - echo "Compiling the code..."
#     - echo "Compile complete."

# unit-test-job:   # This job runs in the test stage.
#   stage: test    # It only starts when the job in the build stage completes successfully.
#   script:
#     - echo "Running unit tests... This will take about 60 seconds."
#     - sleep 60
#     - echo "Code coverage is 90%"

# lint-test-job:   # This job also runs in the test stage.
#   stage: test    # It can run at the same time as unit-test-job (in parallel).
#   script:
#     - echo "Linting code... This will take about 10 seconds."
#     - sleep 10
#     - echo "No lint issues found."

# deploy-job:      # This job runs in the deploy stage.
#   stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.
#   environment: production
#   script:
#     - echo "Deploying application..."
#     - echo "Application successfully deployed."
